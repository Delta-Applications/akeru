!function(e){function t(){this.telephony=window.navigator.b2g.telephony,this.Actions={ConnectingCall:{menuName:"inCallParams"},FirstCall:{menuName:"incommingCall"},FirstRttCall:{menuName:"incommingRttCall"},FirstVTCall:{menuName:"incommingVTCall"},InCall:{menuName:"inActiveCallParams"},InCallNotSupportVT:{menuName:"inActiveCallNotSupportVTParams"},InConnectingVTCall:{menuName:"InConnectingVTCallParams"},InVTCall:{menuName:"inVTCallParams"},InRttCall:{menuName:"inRttCallParams"},InHeldCall:{menuName:"inHeldCallParams"},InCallIncommingCall:{menuName:"inCallAnswerOrHoldParams"},InCallEndAndAnswerCall:{menuName:"inCallEndAndAnswerParams"},ConferenceGroup:{menuName:"inConfernceCallParams"},inActiveConferenceGroup:{menuName:"inActiveConfernceCallParams"},HeldConferenceGroup:{menuName:"inHeldConfernceCallParams"},InCallTwoLines:{menuName:"inCallTwoLinesParams"},InCallTwoLinesActiveRtt:{menuName:"inCallTwoLinesActiveRttParams"},InCallCDMAconnectedAndHold:{menuName:"InCall_CDMAswitchCalls"},InCallManageCallGSM:{menuName:"manageCallGSM"},InCallManageCallVoLTE:{menuName:"manageCallVoLTE"},InConferenceTwoLines:{menuName:"inConferenceTwoLinesParams"},InCallMenuDialogOption:{menuName:"menuDialogParams"},InCallDialerHelperOption:{menuName:"dialerHelperOption"},InCallDialerHelperCommandModeOption:{menuName:"dialerHelperCommandModeOption"},InCallDtmfScreenOption:{menuName:"dtmfScreenOption"},InCallRttViewOption:{menuName:"rttViewParams"},InCallrttViewEditOption:{menuName:"rttViewEditParams"},InCalladdCallDialogOption:{menuName:"addCallDialogParams"},InCallLockScreenOption:{menuName:"lockScreenParams"},finalCallEnd:{menuName:"finalCallEndParams"}},this.Flags={conferenceGroup:1,incoming:2,connected:4,holding:8,rejected:16,pending:32,alerting:64,dialing:128,held:256,flag7:512,resuming:1024}}t.prototype.showGroupCallsOptions=function(){this.telephony.calls.length||"voice-over-cellular"===CallsHandler.imsRegState||"voice-over-wifi"===CallsHandler.imsRegState||"video-over-cellular"===CallsHandler.imsRegState||"video-over-wifi"===CallsHandler.imsRegState?this.show(this.Actions.InCallManageCallVoLTE):this.show(this.Actions.InCallManageCallGSM)},t.prototype.showMenuDialogOptions=function(){this.show(this.Actions.InCallMenuDialogOption)},t.prototype.showDialerHelperOption=function(){this.show(this.Actions.InCallDialerHelperOption)},t.prototype.showDialerHelperCommandModeOption=function(){this.show(this.Actions.InCallDialerHelperCommandModeOption)},t.prototype.showLockScreenOption=function(){this.show(this.Actions.InCallLockScreenOption)},t.prototype.showRttViewOption=function(){this.show(this.Actions.InCallRttViewOption)},t.prototype.showRttViewEditOption=function(){this.show(this.Actions.InCallrttViewEditOption)},t.prototype.showAddCallDialogOptions=function(){this.show(this.Actions.InCalladdCallDialogOption)},t.prototype.showDtmfScreenOption=function(){this.show(this.Actions.InCallDtmfScreenOption)},t.prototype.finalCallEndOption=function(){this.show(this.Actions.finalCallEnd)},t.prototype.CLASS_NAME="CallScreenHelper",t.prototype.show=function(e,t){const l=document.getElementById("dialer-helper");l&&l.classList.contains("display")&&(e=this.Actions.InCallDialerHelperOption,t=void 0),this.showMenu(e),void 0!==t&&CallScreen.updateCallScreenMode(t)},t.prototype.showMenu=function(e){e.menuName?CallScreen.bluetoothMenu.classList.contains("display")&&"addCallDialogParams"!==e.menuName&&"menuDialogParams"!==e.menuName||OptionHelper.show(e.menuName):dump("OptionHelper.hide() for softkeypanel not implemented")},t.prototype.setState=function(e){this.cdmaState=e},t.prototype.showCDMAitem=function(e){switch(e){case"connected_waiting":this.show(this.Actions.InCallIncommingCall,"min-mode");break;case"connected_hold":this.show(this.Actions.InCallCDMAconnectedAndHold,"list-mode")}},t.prototype.getMode=function(){return 1<CallScreen.getNodeNum()?"list-mode":"max-mode"},t.prototype.render=function(){if(!CallScreen.isDtmfNumberShown())if(CallScreen.showMainCallscreen(),this.cdmaState)this.showCDMAitem(this.cdmaState);else{this.debugCall("render"),2<this.telephony.calls.length&&(dump(`Warning, this.telephony.calls.length:
        ${this.telephony.calls.length}`),this.debugCall("calls.length > 2"));var t=CallScreen.calls.getAttribute("show-mode");let e=0;switch((0<this.telephony.conferenceGroup.calls.length||this.telephony.conferenceGroup.state)&&(e=this.Flags.conferenceGroup,e|=this.Flags[this.telephony.conferenceGroup.state]),e|=this.getCallMask(this.telephony.calls),e){case this.Flags.conferenceGroup:this.show(this.Actions.ConferenceGroup,this.getMode());break;case this.Flags.held|this.Flags.connected|this.Flags.incoming:this.show(this.Actions.InCallEndAndAnswerCall,"list-mode");break;case this.Flags.incoming|this.Flags.conferenceGroup:case this.Flags.incoming|this.Flags.conferenceGroup|this.Flags.connected:case this.Flags.incoming|this.Flags.conferenceGroup|this.Flags.held:this.show(this.Actions.InCallIncommingCall,this.getMode());break;case this.Flags.incoming|this.Flags.conferenceGroup|this.Flags.connected|this.Flags.held:this.show(this.Actions.InCallEndAndAnswerCall,"list-mode");break;case this.Flags.incoming:1===this.telephony.calls.length?"Bidirectional"===this.telephony.calls[0].videoCallState?this.show(this.Actions.FirstVTCall,"max-mode"):"full"===this.telephony.calls[0].rttMode?this.show(this.Actions.FirstRttCall,"max-mode"):this.show(this.Actions.FirstCall,"max-mode"):this.debugCall("incomming call more that one");break;case this.Flags.connected:if(CallsHandler.isVideoCall())this.show(this.Actions.InVTCall,"max-mode");else if("full"!==this.telephony.calls[0].rttMode||CallsHandler.isMtHold)if(CallsHandler.isSupportedVT()){const l=document.getElementById("list-call");l.querySelector(".local-video-view").classList.contains("full")?this.show(this.Actions.InConnectingVTCall,"max-mode"):this.show(this.Actions.InCall,this.getMode())}else this.show(this.Actions.InCallNotSupportVT,this.getMode());else dump("show Rtt call actions, isMtHold is false"),this.show(this.Actions.InRttCall,this.getMode());break;case this.Flags.held:this.show(this.Actions.InHeldCall,this.getMode());break;case this.Flags.connected|this.Flags.conferenceGroup:this.show(this.Actions.inActiveConferenceGroup,this.getMode());break;case this.Flags.held|this.Flags.conferenceGroup:this.show(this.Actions.HeldConferenceGroup,this.getMode());break;case this.Flags.connected|this.Flags.incoming:case this.Flags.held|this.Flags.incoming:this.show(this.Actions.InCallIncommingCall,this.getMode());break;case this.Flags.dialing:case this.Flags.alerting:if(1===this.telephony.calls.length){const n=document.getElementById("list-call");n&&n.querySelector(".local-video-view").classList.contains("full")?this.show(this.Actions.InConnectingVTCall,"max-mode"):this.show(this.Actions.ConnectingCall,this.getMode())}else this.debugCall("alerting call more that one");break;case this.Flags.dialing|this.Flags.held:case this.Flags.alerting|this.Flags.held:case this.Flags.resuming|this.Flags.connected:case this.Flags.dialing|this.Flags.held|this.Flags.conferenceGroup:case this.Flags.alerting|this.Flags.held|this.Flags.conferenceGroup:this.show(this.Actions.ConnectingCall,"list-mode");break;case this.Flags.connected|this.Flags.held:case this.Flags.connected|this.Flags.held|this.Flags.conferenceGroup:case this.Flags.connected|this.Flags.holding:CallsHandler.isFirstCallOnCdmaNetwork()?this.show(this.Actions.InCallCDMAconnectedAndHold,"list-mode"):"connected"===this.telephony.conferenceGroup.state?this.show(this.Actions.InConferenceTwoLines,"list-mode"):CallsHandler.isConnectedCallInRttMode?this.show(this.Actions.InCallTwoLinesActiveRtt,"list-mode"):this.show(this.Actions.InCallTwoLines,"list-mode")}dump(`callStateMask: ${e.toString(2)},
      ${this.callMaskToString(e)}`),CallScreen.handleCallWaitingScreen(),t!==CallScreen.calls.getAttribute("show-mode")&&CallScreen.updateHeldDisplay()}},t.prototype.callMaskToString=function(e){let t="";for(const l in this.Flags)Object.prototype.hasOwnProperty.call(this.Flags,l)&&this.Flags[l]&e&&(t+=`<${l}> `);return t},t.prototype.debugCall=function(e){dump(`calls(${e}):`);for(let e=0;e<this.telephony.calls.length;e++){var t=this.telephony.calls[e];dump(`call \tnumber:<${t.id.number}>,  state:<${t.state}>, `+`, name: <${t.id.name}>`)}for(let e=0;e<this.telephony.conferenceGroup.calls.length;e++){var l=this.telephony.conferenceGroup.calls[e];dump(`conCall \tnumber:<${l.id.number}>`)}},t.prototype.getCallMask=function(t){let l=0;for(let e=0;e<t.length;e++)l|=this.Flags[t[e].state];return l},e.CallScreenHelper=new t}(window);