const Contacts={async findByNumber(l,t){if(l&&ContactsManager){var n={filterBy:[ContactsManager.FilterByOption.TEL],filterOption:ContactsManager.FilterOption.MATCH,filterValue:l,onlyMainData:!0};const a=await ContactsManager.find(n,5);let e=[];try{let t=await a.next();for(;t.length;)e=e.concat(t),t=await a.next()}catch(t){DUMP("Error")}if(a.release(),0!==e.length){const o=e.map(t=>t.tel.map(t=>t.value));let a=null;o.forEach((t,n)=>{t.forEach((t,e)=>{l===t&&null===a&&(a={bestMatchIndex:n,localIndex:e})})}),null===a&&(a=SimplePhoneMatcher.bestMatch([l],o));n=e[a.bestMatchIndex];t(n,n.tel[a.localIndex])}else t(null)}else t(null)},isBlockedNumber(t){t={filterOption:ContactsManager.FilterOption.MATCH,filterValue:t};return ContactsManager.findBlockedNumbers(t).then(t=>!(!t||!t.length))},getPhoto(t){return t&&t.photoBlob&&t.photoBlob.length?new Blob([t.photoBlob],{type:t.photoType}):null}};window.Contacts=Contacts;