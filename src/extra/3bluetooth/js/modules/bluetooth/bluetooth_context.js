const SCANTIMEOUT=4e4;class BluetoothContext{constructor(){this._debug=!0,this.defaultAdapter=null,this.adapterManager=AdapterManager,this.init()}init(){this.adapterManager.observe("defaultAdapter",this.onDefaultAdapterChanged.bind(this)),this.onDefaultAdapterChanged(this.adapterManager.defaultAdapter)}watchDefaultAdapterOndevicepaired(e){e.ondevicepaired=this.onAdapterDevicepaired.bind(this,e)}unwatchDefaultAdapterOndevicepaired(e){e.ondevicepaired=null}onAdapterDevicepaired(e,t){this.debug(`onAdapterDevicepaired evt = ${t}`),this.getPairedDevices(e)}onDefaultAdapterChanged(e,t){this.debug(`onDefaultAdapterChanged(): newAdapter = ${e}`),this.debug(`onDefaultAdapterChanged(): oldAdapter = ${t}`),this.defaultAdapter=e,t&&this.unwatchDefaultAdapterOndevicepaired(t),e&&(this.watchDefaultAdapterOndevicepaired(e),"enabled"===e.state&&this.getPairedDevices(e))}getPairedDevices(e){const t=e.getPairedDevices();setTimeout(()=>(0<t.length&&t.sort((e,t)=>e.name>t.name),t),150)}syncWithSettingsKey(e){SettingsObserver.setValue([{name:"bluetooth.enabled",value:e}])}setEnabled(e){return this.defaultAdapter?(this.syncWithSettingsKey(e),e?this.defaultAdapter.enable().then(()=>{this.debug("setEnabled(): set enable successfully :)")},e=>(this.debug(`setEnabled(): set enable failed: reason = ${e}`),Promise.reject(e))):this.defaultAdapter.disable().then(()=>{this.debug("setEnabled(): set disable successfully :)")},e=>(this.debug(`setEnabled(): set disable failed: reason = ${e}`),Promise.reject(e)))):Promise.reject(new Error("default adapter is not existed!!"))}startDiscovery(){return this.defaultAdapter?(setTimeout(()=>{this.stopDiscovery()},SCANTIMEOUT),this.defaultAdapter.startDiscovery().then(e=>{this.debug("startDiscovery(): startDiscovery successfully :)"),this.setDiscoveryHandler(e)},e=>(this.debug(`startDiscovery(): startDiscovery failed: reason = ${e}`),Promise.reject(e)))):Promise.reject(new Error("default adapter is not existed!!"))}stopDiscovery(){return this.defaultAdapter?this.defaultAdapter.stopDiscovery().then(()=>{this.debug("stopDiscovery(): stopDiscovery successfully :)")},e=>(this.debug(`stopDiscovery(): stopDiscovery failed: reason = ${e}`),Promise.reject(e))):Promise.reject(new Error("default adapter is not existed!!"))}setDiscoveryHandler(e){this.debug("setDiscoveryHandler()"),e.ondevicefound=Transfer.onDeviceFound.bind(Transfer)}pair(e){return this.defaultAdapter?this.stopDiscovery().then(()=>this.defaultAdapter.pair(e).then(()=>{this.debug("pair(): Resolved with void value")},e=>(this.debug(`pair(): Reject with this reason: ${e}`),Promise.reject(e))),e=>Promise.reject(e)):Promise.reject(new Error("default adapter is not existed!!"))}sendFile(e,t){return this.defaultAdapter?this.defaultAdapter.sendFile(e,t).then(()=>{this.debug("sendFile(): Resolved with void value")},e=>(this.debug(`sendFile(): Reject with this reason: ${e}`),Promise.reject(e))):Promise.reject(new Error("default adapter is not existed!!"))}debug(e){this._debug}}