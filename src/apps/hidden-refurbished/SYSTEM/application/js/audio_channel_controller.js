'use strict';(function(exports){var FADE_IN_VOLUME=1;var FADE_OUT_VOLUME=0.2;var VIBRATION_DURATION=1000;var AudioChannelController=function(app,channel){this.app=app;this.name=channel.name;this._channel=channel;channel.addEventListener('activestatechanged',this);this._states={active:false,playing:false,fadingOut:false,vibrating:false};this._policy={};this._generateID();};AudioChannelController.prototype=Object.create(BaseUI.prototype);AudioChannelController.prototype.EVENT_PREFIX='audiochannel';AudioChannelController.prototype.handleEvent=function(evt){switch(evt.type){case'activestatechanged':var channel=evt.target;channel.isActive().onsuccess=(evt)=>{this._states.active=evt.target.result;this.publish('statechanged');};break;}};AudioChannelController.prototype.setPolicy=function(policy){this._policy=policy||this._policy;return this;};AudioChannelController.prototype.getPolicy=function(){return this._policy;};AudioChannelController.prototype.proceedPolicy=function(){var policy=this._policy;if(policy.isAllowedToPlay){this._play();}else if(policy.isAllowedToPlay!=null){this._pause();}
if(policy.isNeededToFadeOut){this._fadeOut();}else if(policy.isNeededToFadeOut!=null){this._fadeIn();}
if(policy.isNeededToVibrate){this._vibrate();}
return this;};AudioChannelController.prototype.isActive=function(){return this._states.active;};AudioChannelController.prototype.isPlaying=function(){return this._states.playing;};AudioChannelController.prototype.isFadingOut=function(){return this._states.fadingOut;};AudioChannelController.prototype.isVibrating=function(){return this._states.vibrating;};AudioChannelController.prototype.destroy=function(){this._channel.removeEventListener('activestatechanged',this);this.publish('destroyed');};AudioChannelController.prototype._play=function(){this._states.playing=true;var promise=new Promise((resolve)=>{var request=this._channel.setMuted(false);request.onsuccess=()=>{resolve();};request.onerror=()=>{throw'Cannot play the audio channel.';};});promise.then(()=>{this.app.debug('Play the audio channel.');}).catch(e=>{this.app.debug(e);});};AudioChannelController.prototype._fadeIn=function(){this._setVolume(FADE_IN_VOLUME);this._states.fadingOut=false;},AudioChannelController.prototype._fadeOut=function(){this._setVolume(FADE_OUT_VOLUME);this._states.fadingOut=true;!this._states.playing&&this._play();},AudioChannelController.prototype._pause=function(){this._states.playing=false;var promise=new Promise((resolve)=>{var request=this._channel.setMuted(true);request.onsuccess=()=>{resolve();};request.onerror=()=>{throw'Cannot pause the audio channel.';};});promise.then(()=>{this.app.debug('Pause the audio channel');}).catch(e=>{this.app.debug(e);});};AudioChannelController.prototype._vibrate=function(){var intervalId=setInterval(()=>{navigator.vibrate(200);},300);this._states.vibrating=true;setTimeout(()=>{clearInterval(intervalId);this._states.vibrating=false;},VIBRATION_DURATION);};AudioChannelController.prototype._setVolume=function(volume){var promise=new Promise((resolve)=>{var request=this._channel.setVolume(volume);request.onsuccess=()=>{resolve();};request.onerror=()=>{throw'Cannot set volume of the audio channel.';};});promise.then(()=>{this.app.debug('Set volume: '+volume);}).catch(e=>{this.app.debug(e);});};AudioChannelController.prototype._generateID=function(){this.instanceID=this.app.instanceID+'_'+this.name;};exports.AudioChannelController=AudioChannelController;}(window));