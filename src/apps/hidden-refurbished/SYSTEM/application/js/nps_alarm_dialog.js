'use strict';(function(exports){var NPSAlarmDialog=function NPSAlarmDialog(){};NPSAlarmDialog.prototype.show=function(oncancelled,onshown,onconfirmed){this.log('show, show dialog');this.oncancelled=oncancelled;this.onconfirmed=onconfirmed;var self=this;Service.request('DialogService:show',{header:'feedback-dialogview-header',content:'feedback-dialogview-message',noClose:true,type:'confirm',onOk:self.handleButtonConfirmClicked.bind(self),onCancel:self.handleButtonCancelClicked.bind(self),onBack:self.handleButtonCancelClicked.bind(self)});if(onshown&&typeof onshown==='function'){onshown();}};NPSAlarmDialog.prototype.handleButtonCancelClicked=function(){if(this.oncancelled&&typeof this.oncancelled==='function'){this.oncancelled();Service.request('DialogService:hide');}
return true;};NPSAlarmDialog.prototype.handleButtonConfirmClicked=function(){this.log('handleButtonConfirmClicked');this.log('handleButtonConfirmClicked, hide dialog');Service.request('DialogService:hide');try{this.log('handleButtonConfirmClicked, try to jump to feedback UI');new MozActivity({name:'configure',data:{target:'device',section:'about-feedback'}});}catch(error){success=false;this.log('handleButtonConfirmClicked, failed to jump to feedback UI: '+error);}
return true;};NPSAlarmDialog.prototype.checkIfAnySIMCardInsert=function(){this.log('checkIfAnySIMCardInsert');if(SIMSlotManager.noSIMCardOnDevice()){this.log('checkIfAnySIMCardInsert, no sim card insert');var toast={messageL10nId:'insert-sim',latency:2000,useTransition:true};Toaster.showToast(toast);return false;}
this.log('checkIfAnySIMCardInsert, there is sim card insert');return true;};NPSAlarmDialog.prototype.checkConnectionState=function(callback){this.log('checkConnectionState');var wifiManager=navigator.mozWifiManager;var request=navigator.mozSettings.createLock().get('*');request.onsuccess=function(){var wifiEnabled=request.result['wifi.enabled'];var wifiAvailable=wifiEnabled&&wifiManager&&wifiManager.connection.status==='connected';var dataAvailable=request.result['ril.data.enabled'];this.log('checkConnectionState, wifiAvailable: '+wifiAvailable);this.log('checkConnectionState, dataAvailable: '+dataAvailable);if(!wifiAvailable&&!dataAvailable){this.log('checkConnectionState, no valid connection, bail');var toast={messageL10nId:'feedback-errormessage-data-wifi-off',latency:2000,useTransition:true};Toaster.showToast(toast);if(callback&&typeof callback==='function'){callback(false);}
return;}
if(!wifiAvailable){var dataDefaultServiceId=request.result['ril.data.defaultServiceId'];this.log('checkConnectionState, current data service id: '+dataDefaultServiceId);var iccObj=this.getIccByIndex(dataDefaultServiceId);if(!iccObj){this.log('checkConnectionState, invalid icc object');if(callback&&typeof callback==='function'){callback(false);}
return;}
var fdnEnabled=iccObj.getCardLock('fdn');fdnEnabled.onsuccess=function(){var enabled=fdnEnabled.result.enabled;this.log('checkConnectionState, read current sim card fdn enable: '+enabled);if(enabled){this.log('checkConnectionState, fdn enabled, bail');var toast={messageL10nId:'feedback-dialogview-fdn',latency:2000,useTransition:true};Toaster.showToast(toast);if(callback&&typeof callback==='function'){callback(false);}
return;}else{this.log('checkConnectionState, fdn disabled, check success');if(callback&&typeof callback==='function'){callback(true);}}}.bind(this);fdnEnabled.onerror=function(){this.log('checkConnectionState, read current sim card fdn enabled failed, continue');if(callback&&typeof callback==='function'){callback(true);}}.bind(this);}else{this.log('checkConnectionState, check success');if(callback&&typeof callback==='function'){callback(true);}}}.bind(this);request.onerror=function(){this.log('checkConnectionState, read settings failed, continue');if(callback&&typeof callback==='function'){callback(true);}}.bind(this);};NPSAlarmDialog.prototype.getIccByIndex=function(index){var iccObj;if(navigator.mozMobileConnections[index]){var iccId=navigator.mozMobileConnections[index].iccId;if(iccId){iccObj=navigator.mozIccManager.getIccById(iccId);}}
return iccObj;};NPSAlarmDialog.prototype.log=function(msg){console.log('NPS NPSAlarmDialog '+msg);};exports.NPSAlarmDialog=new NPSAlarmDialog();}(window));