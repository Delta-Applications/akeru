'use strict';(function(exports){function SearchWindow(){this.instanceID='search';this.publish('created');this._setBrowserConfig=this.setBrowserConfig.bind(this);SettingsListener.observe('rocketbar.searchAppURL','',this._setBrowserConfig);return this;}
SearchWindow.REGISTERED_EVENTS=['mozbrowsererror'];SearchWindow.SUB_COMPONENTS={'childWindowFactory':window.ChildWindowFactory,'contextmenu':window.BrowserContextMenu,'transitionController':window.AppTransitionController,'valueSelector':window.ValueSelector};SearchWindow.prototype=Object.create(AppWindow.prototype);SearchWindow.prototype.constructor=SearchWindow;SearchWindow.prototype._DEBUG=false;SearchWindow.prototype.CLASS_NAME='SearchWindow';SearchWindow.prototype.CLASS_LIST='appWindow searchWindow';SearchWindow.prototype.HIERARCHY_MANAGER='Rocketbar';SearchWindow.prototype.openAnimation='immediate';SearchWindow.prototype.closeAnimation='immediate';SearchWindow.prototype.eventPrefix='search';SearchWindow.prototype.containerElement=document.getElementById('rocketbar-results');SearchWindow.prototype.view=function aw_view(){return`<div class="${this.CLASS_LIST}" id="${this.instanceID}"
             transition-state="closed">
             <div class="browser-container"></div>
           </div>`;};SearchWindow.prototype.lockOrientation=function(){var currentApp=Service.currentApp;currentApp.setOrientation();};SearchWindow.prototype.requestClose=function(){this.close();};SearchWindow.prototype.destroy=function(){SettingsListener.unobserve('rocketbar.searchAppURL',this._setBrowserConfig);AppWindow.prototype.destroy.call(this);};SearchWindow.prototype.setBrowserConfig=function(url){var manifestURL=url?url.match(/(^.*?:\/\/.*?\/)/)[1]+'manifest.webapp':'';this.manifestURL=manifestURL;this.searchAppURL=url;var app=applications.getByManifestURL(manifestURL);this.origin=app.origin;this.manifestURL=app.manifestURL;this.url=app.origin+'/index.html';this.browser_config=new BrowserConfigHelper({url:this.origin,manifestURL:this.manifestURL});this.manifest=this.browser_config.manifest;this.browser_config.url=this.url;this.browser_config.isSearch=true;this.config=this.browser_config;this.isSearch=true;this.name=this.manifest.name;this.render();this.open();};SearchWindow.prototype.isFocused=function(){return document.activeElement===(this.browser&&this.browser.element);};exports.SearchWindow=SearchWindow;}(window));