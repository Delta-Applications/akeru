'use strict';(function(exports){var _id=0;var ActivityWindow=function ActivityWindow(config,caller){this.config=config;for(var key in config){this[key]=config[key];}
if(caller){caller.setFrontWindow(this);this.rearWindow=caller;if(caller.element){this.containerElement=caller.element;}}
this.publish('creating');this.render();this.publish('created');};ActivityWindow.prototype=Object.create(AppWindow.prototype);ActivityWindow.prototype.constructor=ActivityWindow;ActivityWindow.prototype.eventPrefix='activity';ActivityWindow.prototype.CLASS_NAME='ActivityWindow';ActivityWindow.prototype._DEBUG=false;ActivityWindow.prototype.openAnimation='fade-in';ActivityWindow.prototype.closeAnimation='fade-out';ActivityWindow.prototype.isFullScreen=function acw_isFullScreen(){if(typeof(this._fullscreen)!=='undefined'){return this._fullscreen;}
this._fullscreen=(this.manifest&&!!this.manifest.fullscreen)?!!this.manifest.fullscreen:this.rearWindow?this.rearWindow.isFullScreen():false;return this._fullscreen;};ActivityWindow.prototype.lockOrientation=function acw_lockOrientation(noCapture){if(!this.rearWindow){return;}
if(this.isActive()){var orientation1=(this.manifest)?this.manifest.orientation:null;var orientation2=(this.config.manifest)?this.config.manifest.orientation:null;var orientation3=(this.rearWindow.manifest)?this.rearWindow.manifest.orientation:null;var orientation4=OrientationManager.globalOrientation;var orientation=orientation1||orientation2||orientation3||orientation4;if(orientation){var rv=false;if('lockOrientation'in screen){rv=screen.lockOrientation(orientation);}else if('mozLockOrientation'in screen){rv=screen.mozLockOrientation(orientation);}
if(rv===false){console.warn('screen.mozLockOrientation() returned false for',this.origin,'orientation',orientation);}}else{if('unlockOrientation'in screen){screen.unlockOrientation();}else if('mozUnlockOrientation'in screen){screen.mozUnlockOrientation();}}}};ActivityWindow.prototype.isBackgroundTransparent=function acw_isBackgroundTransparent(){if(this.manifest&&this.manifest.background_color&&(this.manifest.background_color==='transparent')){return true;}
return false;};ActivityWindow.prototype.CLASS_LIST='appWindow activityWindow inline-activity';ActivityWindow.prototype.view=function acw_view(){let placeholder='';this.instanceID=this.CLASS_NAME+'_'+_id;_id++;if(this.getPlaceholderColor()){placeholder=`<div class="placeholder">
                <div class="statusbar-placeholder"></div>
                <div class="header-placeholder h1"></div>
                <div class="skbar visible softkey-placeholder"></div>
              </div>`;}
return`<div id="${this.instanceID}"
            class="${this.CLASS_LIST}">
            ${placeholder}
            <div class="browser-container">
             <div class="screenshot-overlay"></div>
            </div>
            </div>`;};ActivityWindow.SUB_COMPONENTS={'transitionController':window.AppTransitionController,'modalDialog':window.AppModalDialog,'valueSelector':window.ValueSelector,'authDialog':window.AppAuthenticationDialog,'contextmenu':window.BrowserContextMenu,'childWindowFactory':window.ChildWindowFactory,'statusbar':window.AppStatusbar};ActivityWindow.REGISTERED_EVENTS=AppWindow.REGISTERED_EVENTS;ActivityWindow.prototype._handle_mozbrowseractivitydone=function aw__handle_mozbrowseractivitydone(){this.kill();};ActivityWindow.prototype.render=function acw_render(){this.publish('willrender');this.containerElement.insertAdjacentHTML('beforeend',this.view());this.containerElement.classList.add('has-activity');if(this.containerElement.parentElement&&this.containerElement.parentElement.classList.contains('popupWindow')){this.containerElement.parentElement.classList.add('has-activity');}
this.browser_config={parentApp:this.parentApp,origin:this.origin,url:this.url,name:this.name,manifest:this.manifest,manifestURL:this.manifestURL,window_name:'inline'+this.instanceID,oop:true};this.browser=new BrowserFrame(this.browser_config);this.element=document.getElementById(this.instanceID);this.browserContainer=this.element.querySelector('.browser-container');this.browserContainer.appendChild(this.browser.element);this.frame=this.element;this.iframe=this.browser.element;this.screenshotOverlay=this.element.querySelector('.screenshot-overlay');this.headerPlaceholder=this.element.querySelector('.header-placeholder');this.statusbarPlaceholder=this.element.querySelector('.statusbar-placeholder');if(this.getPlaceholderColor()){this.element.classList.add('placeholder-enabled');this.headerPlaceholder.style.backgroundColor=this.getPlaceholderColor();this.statusbarPlaceholder.style.backgroundColor=this.getPlaceholderColor();this.headerPlaceholder.textContent=this.name;this.browserContainer.classList.add('transparent');}
if(this.isFullScreen()){this.element.classList.add('fullscreen-app');}
if(this.isOverlappingStatusbar()){this.element.classList.add('statusbar-overlapped');}else{this.element.classList.remove('statusbar-overlapped');}
if(this.isBackgroundTransparent()){this.element.classList.add('transparent-background');}else{this.getIconForSplash();this.setFrameBackground();}
this._registerEvents();this.installSubComponents();this.publish('rendered');};ActivityWindow.prototype.containerElement=document.getElementById('windows');ActivityWindow.prototype.requestOpen=function acw_requestOpen(){if(this.rearWindow){this.rearWindow.requestOpen();}};ActivityWindow.prototype.requestClose=function acw_requestOpen(){this.containerElement.classList.remove('has-activity');if(this.containerElement.parentElement&&this.containerElement.parentElement.classList.contains('popupWindow')){this.containerElement.parentElement.classList.remove('has-activity');}
this.close();};exports.ActivityWindow=ActivityWindow;}(window));