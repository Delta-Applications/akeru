'use strict';(function(exports){var GLOBAL_DEBUG=false;var AVAILABLE_MODULES={};var BaseModule=function(){};BaseModule.SUB_MODULES=[];BaseModule.SUB_MODULE_PARENT=window;BaseModule.EVENTS=[];BaseModule.SETTINGS=[];BaseModule.IMPORTS=[];BaseModule.SERVICES=[];BaseModule.STATES=[];var SubmoduleMixin={_startSubModules:function(){if(!this.constructor.SUB_MODULES||this.constructor.SUB_MODULES.length===0){return;}
this.debug('lazy loading submodules: '+
this.constructor.SUB_MODULES.concat());BaseModule.lazyLoad(this.constructor.SUB_MODULES).then(function(){this.debug('lazy loaded submodules: '+
this.constructor.SUB_MODULES.concat());this.constructor.SUB_MODULES.forEach(function(module){var moduleName=BaseModule.lowerCapital(module);var parent=this.constructor.SUB_MODULE_PARENT||this;if(!parent[moduleName]){this._initialSubModule(moduleName,module);}},this);}.bind(this));},_initialSubModule:function(moduleName,module){var parent=this.constructor.SUB_MODULE_PARENT||this;var constructor=AVAILABLE_MODULES[module]||window[module];if(typeof(constructor)=='function'){this.debug('instantiating submodule: '+moduleName);parent[moduleName]=new constructor(this);if(typeof(this['_'+moduleName+'_loaded'])=='function'){this['_'+moduleName+'_loaded']();}else if(this.lifeCycleState!=='stopped'){parent[moduleName].start&&parent[moduleName].start();}}},_stopSubModules:function(){if(!this.constructor.SUB_MODULES){return;}
this.constructor.SUB_MODULES.forEach(function(module){var moduleName=BaseModule.lowerCapital(module);var parent=this.constructor.SUB_MODULE_PARENT||this;if(parent[moduleName]){this.debug('Stopping submodule: '+moduleName);parent[moduleName].stop&&parent[moduleName].stop();}},this);}};var SettingMixin={observe:function(name,value){this.debug('observing '+name+' : '+value);this._settings[name]=value;if(typeof(this['_observe_'+name])=='function'){this.debug('observer for '+name+' found, invoking.');this['_observe_'+name](value);}},_observeSettings:function(){if(!this.constructor.SETTINGS){this.debug('No settings needed, skipping.');return;}
this._settings={};this.debug('~observing following settings: '+
this.constructor.SETTINGS.concat());this.constructor.SETTINGS.forEach(function(setting){this.service.request('SettingsCore:addObserver',setting,this);},this);},_unobserveSettings:function(){if(!this.constructor.SETTINGS){return;}
this.constructor.SETTINGS.forEach(function(setting){this.service.request('SettingsCore:removeObserver',setting,this);},this);}};var EventMixin={_pre_handleEvent:function(){},_post_handleEvent:function(){},_subscribeEvents:function(){if(!this.constructor.EVENTS){this.debug('No events wanted, skipping.');return;}
this.debug('event subcribing stage..');this.constructor.EVENTS.forEach(function(event){this.debug('subscribing '+event);window.addEventListener(event,this);},this);},_unsubscribeEvents:function(){if(!this.constructor.EVENTS){return;}
this.constructor.EVENTS.forEach(function(event){window.removeEventListener(event,this);},this);},handleEvent:function(evt){if(typeof(this._pre_handleEvent)=='function'){var shouldContinue=this._pre_handleEvent(evt);if(shouldContinue===false){return;}}else{console.log('no handle event pre found. skip');}
if(typeof(this['_handle_'+evt.type])=='function'){this.debug('handling '+evt.type);this['_handle_'+evt.type](evt);}
if(typeof(this._post_handleEvent)=='function'){this._post_handleEvent(evt);}}};var ServiceMixin={_registerServices:function(){if(!this.constructor.SERVICES){return;}
this.constructor.SERVICES.forEach(function(service){this.service.register(service,this);},this);},_unregisterServices:function(){if(!this.constructor.SERVICES){return;}
this.constructor.SERVICES.forEach(function(service){this.service.unregister(service,this);},this);}};var StateMixin={_registerStates:function(){if(!this.constructor.STATES){return;}
this.constructor.STATES.forEach(function(state){this.service.registerState(state,this);},this);},_unregisterStates:function(){if(!this.constructor.STATES){return;}
this.constructor.STATES.forEach(function(state){this.service.unregisterState(state,this);},this);}};BaseModule.mixin=function(prototype,mixin){for(var prop in mixin){if(mixin.hasOwnProperty(prop)){prototype[prop]=mixin[prop];}}};BaseModule.create=function(constructor,prototype,properties){constructor.prototype=Object.create(BaseModule.prototype,properties);constructor.prototype.constructor=constructor;if(constructor.SETTINGS){BaseModule.mixin(constructor.prototype,SettingMixin);}
if(constructor.EVENTS){BaseModule.mixin(constructor.prototype,EventMixin);}
if(constructor.SERVICES){BaseModule.mixin(constructor.prototype,ServiceMixin);}
if(constructor.STATES){BaseModule.mixin(constructor.prototype,StateMixin);}
if(constructor.SUB_MODULES){BaseModule.mixin(constructor.prototype,SubmoduleMixin);}
if(prototype){BaseModule.mixin(constructor.prototype,prototype);if(prototype.name){AVAILABLE_MODULES[prototype.name]=constructor;}else{console.warn('No name give, impossible to instantiate without name.');}}
return constructor;};BaseModule.instantiate=function(moduleName){if(moduleName in AVAILABLE_MODULES){var args=Array.prototype.slice.call(arguments,1);var constructor=function(){AVAILABLE_MODULES[moduleName].apply(this,args);};constructor.prototype=AVAILABLE_MODULES[moduleName].prototype;return new constructor();}
return undefined;};BaseModule.lazyLoad=function(array){var self=this;return new Promise(function(resolve){var fileList=[];array.forEach(function(module){fileList.push(BaseModule.object2fileName(module));},self);LazyLoader.load(fileList,function(){resolve();});});};BaseModule.lowerCapital=function(str){return str.charAt(0).toLowerCase()+str.slice(1);};BaseModule.object2fileName=function(strings){var i=0;var ch='';while(i<=strings.length){var character=strings.charAt(i);if(character!==character.toLowerCase()){if(ch===''){ch+=character.toLowerCase();}else{ch+='_'+character.toLowerCase();}}else{ch+=character;}
i++;}
return'/js/'+ch+'.js';};BaseModule.prototype={service:window.Service,DEBUG:false,TRACE:false,name:'(Anonymous)',EVENT_PREFIX:'',lifeCycleState:'stopped',publish:function(event,detail,noPrefix){var prefix=noPrefix?'':this.EVENT_PREFIX;var evt=new CustomEvent(prefix+event,{bubbles:true,detail:detail||this});this.debug('publishing: '+prefix+event);window.dispatchEvent(evt);},debug:function(){if(this.DEBUG||GLOBAL_DEBUG){console.log('['+this.name+']'+'['+this.service.currentTime()+'] '+
Array.slice(arguments).concat());if(this.TRACE){console.trace();}}else if(window.DUMP){DUMP('['+this.name+']'+'['+this.service.currentTime()+'] '+
Array.slice(arguments).concat());}},info:function(){if(this.DEBUG||GLOBAL_DEBUG){console.info('['+this.name+']'+'['+this.service.currentTime()+'] '+
Array.slice(arguments).concat());}},warn:function(){if(this.DEBUG||GLOBAL_DEBUG){console.warn('['+this.name+']'+'['+this.service.currentTime()+'] '+
Array.slice(arguments).concat());}},error:function(){if(this.DEBUG||GLOBAL_DEBUG){console.error('['+this.name+']'+'['+this.service.currentTime()+'] '+
Array.slice(arguments).concat());}},writeSetting:function(settingObject){this.debug('writing '+JSON.stringify(settingObject)+' to settings db');return this.service.request('SettingsCore:set',settingObject);},readSetting:function(name){this.debug('reading '+name+' from settings db');return this.service.request('SettingsCore:get',name);},_start:function(){},_stop:function(){},start:function(){if(this.lifeCycleState!=='stopped'){this.warn('already started');return;}
this.switchLifeCycle('starting');this.imports();},__imported:function(){if(this.lifeCycleState==='stopped'){this.warn('already stopped');return;}
this._startSubModules&&this._startSubModules();this._start();this._subscribeEvents&&this._subscribeEvents();this._observeSettings&&this._observeSettings();this._registerServices&&this._registerServices();this._registerStates&&this._registerStates();this.switchLifeCycle('started');},stop:function(){if(this.lifeCycleState==='stopped'){this.warn('already stopped');return;}
this._unregisterServices&&this._unregisterServices();this._unregisterStates&&this._unregisterStates();this._stopSubModules&&this._stopSubModules();this._unsubscribeEvents&&this._unsubscribeEvents();this._unobserveSettings&&this._unobserveSettings();this._stop();this.switchLifeCycle('stopped');},switchLifeCycle:function(state){if(this.lifeCycleState===state){return;}
this.debug('life cycle state change: '+
this.lifeCycleState+' -> '+state);this.lifeCycleState=state;this.publish(state);},imports:function(){if(!this.constructor.IMPORTS||typeof(this.constructor.IMPORTS)=='undefined'||this.constructor.IMPORTS.length===0){this.__imported();return;}
this.debug(this.constructor.IMPORTS);this.debug('import loading.');LazyLoader.load(this.constructor.IMPORTS,function(){this.__imported();}.bind(this));}};exports.BaseModule=BaseModule;}(window));