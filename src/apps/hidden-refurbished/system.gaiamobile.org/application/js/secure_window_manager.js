'use strict';(function(exports){var SecureWindowManager=function(){this.initElements();this.initEvents();Service.request('registerHierarchy',this);};SecureWindowManager.prototype={name:'SecureWindowManager',elements:{windows:null,screen:null},states:{activeApp:null,runningApps:{},killMode:false},configs:{killAnimation:'immediate',listens:['secure-killapps','secure-closeapps','secure-appcreated','secure-appopened','secure-appclosed','secure-appterminated','secure-apprequestclose','attentionopened','attentionclosed']}};SecureWindowManager.prototype.HIERARCHY_MANAGER='SecureWindowManager';SecureWindowManager.prototype.EVENT_PREFIX='securewindowmanager';SecureWindowManager.prototype.setHierarchy=function(active){if(!this.states.activeApp){return;}
if(active){this.states.activeApp.focus();}
this.states.activeApp.setVisibleForScreenReader(active);};SecureWindowManager.prototype.getActiveWindow=function(){return this.isActive()?this.states.activeApp:null;};SecureWindowManager.prototype._handle_home=function(){if(0!==Object.keys(this.states.runningApps).length){this.elements.screen.classList.remove('secure-app');this.softKillApps();}
return true;};SecureWindowManager.prototype.respondToHierarchyEvent=function(evt){if(this['_handle_'+evt.type]){return this['_handle_'+evt.type](evt);}else{return true;}};SecureWindowManager.prototype.handleEvent=function swm_handleEvent(evt){var app=null;switch(evt.type){case'secure-killapps':if(0!==Object.keys(this.states.runningApps).length){this.states.killMode=true;this.killApps();}
break;case'secure-closeapps':if(0!==Object.keys(this.states.runningApps).length){this.softKillApps();}
break;case'secure-appcreated':app=evt.detail;if(this.allowed(app.config)){this.registerApp(app);this.activateApp(app);}else{console.error('Disallowed app: ',app.instanceID);}
break;case'secure-appopened':this.elements.screen.classList.add('secure-app');this.publish(this.EVENT_PREFIX+'-activated',this);break;case'secure-appclosed':case'secure-appterminated':app=evt.detail;app.cancelSoftKill();this.unregisterApp(app);this.deactivateApp();if(0===Object.keys(this.states.runningApps).length){this.states.killMode=false;}
this.elements.screen.classList.remove('secure-app');this.publish(this.EVENT_PREFIX+'-deactivated',this);break;case'secure-apprequestclose':app=evt.detail;app.close(this.states.killMode?this.configs.killAnimation:null);break;case'attentionopened':app=this.states.activeApp;if(app){this.elements.screen.classList.remove('fullscreen-app');}
break;case'attentionclosed':app=this.states.activeApp;if(app){if(app&&app.isFullScreen()){this.elements.screen.classList.add('fullscreen-app');}else{this.elements.screen.classList.remove('fullscreen-app');}}
break;}};SecureWindowManager.prototype.initElements=function swm_initElements(){var selectors={windows:'windows',screen:'screen'};for(var name in selectors){var id=selectors[name];this.elements[name]=document.getElementById(id);}};SecureWindowManager.prototype.initEvents=function swm_initEvents(){this.configs.listens.forEach((function _initEvent(type){self.addEventListener(type,this);}).bind(this));};SecureWindowManager.prototype.killApps=function swm_killApps(){for(var origin in this.states.runningApps){this.states.runningApps[origin].kill();}};SecureWindowManager.prototype.softKillApps=function swm_softKillApps(){for(var origin in this.states.runningApps){this.states.runningApps[origin].softKill();}};SecureWindowManager.prototype.publish=function swm_publish(ne,detail){var event=new CustomEvent(ne,{detail:detail});window.dispatchEvent(event);};SecureWindowManager.prototype.registerApp=function swm_registerApp(app){this.states.runningApps[app.instanceID]=app;};SecureWindowManager.prototype.unregisterApp=function swm_unregisterApp(app){delete this.states.runningApps[app.instanceID];};SecureWindowManager.prototype.activateApp=function swm_activateApp(app){this.states.activeApp=app;if(app.isFullScreen()){this.elements.screen.classList.add('fullscreen-app');}else{this.elements.screen.classList.remove('fullscreen-app');}};SecureWindowManager.prototype.deactivateApp=function swm_deactivateApp(){if(this.states.activeApp&&this.states.activeApp.isFullScreen()){this.elements.screen.classList.remove('fullscreen-app');}
this.states.activeApp=null;};SecureWindowManager.prototype.allowed=function swm_allowed(config){if('certified'!==config.manifest.type){return false;}
return true;};SecureWindowManager.prototype.isActive=function swm_isActive(){if(!this.states.activeApp){return false;}else{return this.states.activeApp.isActive();}};exports.SecureWindowManager=SecureWindowManager;})(window);