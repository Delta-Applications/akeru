
!function(e){var t=e.ImageUtils={};const n="image/jpeg",r="image/png",i="image/gif",o="image/bmp";t.JPEG=n,t.PNG=r,t.GIF=i,t.BMP=o,t.getSizeAndType=function(e){function t(e,t,a,s){function u(t){var u=new Uint8Array(t,0,16),c=new DataView(t);if(137===u[0]&&80===u[1]&&78===u[2]&&71===u[3]&&13===u[4]&&10===u[5]&&26===u[6]&&10===u[7]&&73===u[12]&&72===u[13]&&68===u[14]&&82===u[15])try{a({type:r,width:c.getUint32(16,!1),height:c.getUint32(20,!1)})}catch(l){s({error:l.toString()})}else if(71!==u[0]||73!==u[1]||70!==u[2]||56!==u[3]||55!==u[4]&&57!==u[4]||97!==u[5])if(66===u[0]&&77===u[1]&&c.getUint32(2,!0)===e.size)try{var f,d;12===c.getUint16(14,!0)?(f=c.getUint16(18,!0),d=c.getUint16(20,!0)):(f=c.getUint32(18,!0),d=c.getUint32(22,!0)),a({type:o,width:f,height:d})}catch(l){s({error:l.toString()})}else if(255===u[0]&&216===u[1]){var g={type:n};try{for(var p=2;;){255!==c.getUint8(p)&&s({error:"corrupt JPEG file"});var h=c.getUint8(p+1),m=c.getUint16(p+2)+2;if(h>=192&&195>=h||h>=197&&199>=h||h>=201&&203>=h||h>=205&&207>=h){g.height=c.getUint16(p+5,!1),g.width=c.getUint16(p+7,!1),a(g);break}if(p+=m,p+9>c.byteLength){g.error="corrupt JPEG file",s(g);break}}}catch(l){s({error:l.toString()})}}else s({error:"unknown image type"});else try{a({type:i,width:c.getUint16(6,!0),height:c.getUint16(8,!0)})}catch(l){s({error:l.toString()})}}var c=e.slice(0,Math.min(t,e.size)),l=new FileReader;l.readAsArrayBuffer(c),l.onloadend=function(){u(l.result)}}return e instanceof Blob?new Promise(function(a,s){function u(e){a(e)}function c(r){r.type===n?t(e,e.size,u,l):s(r.error)}function l(e){s(e.error)}if(e.size<=16)return s("corrupt image file"),void 0;var f=32768;(e.type===r||e.type===i||e.type===o)&&(f=512),t(e,f,u,c)}):Promise.reject(new TypeError("argument is not a Blob"))},t.resizeAndCropToCover=function(e,i,o,a,s){function u(u){var c=u.type,l=u.width,f=u.height;a&&a!==n&&a!==r&&(console.warn("Ignoring unsupported outputType",a),a=void 0),a||(a=c===n||c===r?c:r);var d,g=URL.createObjectURL(e);if(c===n&&l>i&&f>o){var p=Math.max(i/l,o/f);d=t.Downsample.sizeNoMoreThan(p)}else d="";return new Promise(function(e,t){function n(){r.onerror=r.onload="",r.src="",URL.revokeObjectURL(g)}var r=new Image;r.src=g+d,r.onerror=function(){n(),t("failed to decode image")},r.onload=function(){var t=r.width,u=r.height,c=i/t,l=o/u,f=Math.max(c,l),d=Math.round(i/f),g=Math.round(o/f),p=Math.floor((t-d)/2),h=Math.floor((u-g)/2),m=document.createElement("canvas");m.width=i,m.height=o;var v=m.getContext("2d",{willReadFrequently:!0});v.drawImage(r,p,h,d,g,0,0,i,o),n(),m.toBlob(function(t){m.width=0,e(t)},a,s)}})}return!i||!isFinite(i)||0>=i||!o||!isFinite(o)||0>=o?Promise.reject(new TypeError("invalid output dimensions")):(i=Math.round(i),o=Math.round(o),t.getSizeAndType(e).then(function(t){var n=t.width,r=t.height;return n===i&&r===o?e:u(t)},function(){return u({})}))},function(e){function t(e){return Math.round(100*e)/100}function n(e,n){return Object.freeze({dimensionScale:t(n),areaScale:t(n*n),toString:function(){return"#-moz-samplesize="+e},scale:function(e){return Math.ceil(e*n)}})}function r(e){e=t(e);for(var n=0;n<u.length;n++){var r=u[n];if(r.dimensionScale<=e)return r}return u[u.length-1]}function i(e){e=t(e);for(var n=u.length-1;n>=0;n--){var r=u[n];if(r.dimensionScale>=e)return r}return s}function o(e){e=t(e);for(var n=0;n<u.length;n++){var r=u[n];if(r.areaScale<=e)return r}return u[u.length-1]}function a(e){e=t(e);for(var n=u.length-1;n>=0;n--){var r=u[n];if(r.areaScale>=e)return r}return s}var s=Object.freeze({dimensionScale:1,areaScale:1,toString:function(){return""},scale:function(e){return e}}),u=[s,n(2,.5),n(3,3/8),n(4,.25),n(8,1/8)];e.Downsample={sizeAtLeast:r,sizeNoMoreThan:i,areaAtLeast:o,areaNoMoreThan:a,NONE:s,MAX_SIZE_REDUCTION:1/u[u.length-1].dimensionScale,MAX_AREA_REDUCTION:1/u[u.length-1].areaScale}}(e.ImageUtils)}(window);