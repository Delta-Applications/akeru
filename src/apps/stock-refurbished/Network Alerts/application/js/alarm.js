'use strict';let Alarm=function(){this.DEBUG=true;this.name='AlarmHandler';};Alarm.prototype.debug=function(s){if(this.DEBUG){console.log(`-*- CMAS ${this.name} -*- ${s}`);}};Alarm.prototype.createAlarms=function(alarmTime){if(!alarmTime){return;}
this.removeAlarms().then(()=>{this.debug(`createAlarms: ${alarmTime}`);const aTime=Date.now()+alarmTime*60*1000;let request=navigator.mozAlarms.add((new Date(aTime)),'ignoreTimezone',{type:'remind',alarmType:'WEA'});request.onsuccess=()=>{this.debug('Add alarm success.');};});};Alarm.prototype.removeAlarms=function(){this.debug(`clear all alarms`);return new Promise((resolve)=>{let request=navigator.mozAlarms.getAll();request.onsuccess=(event)=>{let alarms=event.target.result;if(!alarms){alarms=[];}
alarms.forEach((alarm)=>{if(alarm.data&&alarm.data.type==='remind'&&'WEA'===alarm.data.alarmType){navigator.mozAlarms.remove(alarm.id);}});resolve();};});};Alarm.prototype.appendAlarms=function(minutes,callback){this.debug('appendAlarms ...');this.createAlarms(minutes);navigator.mozSetMessageHandler('alarm',(message)=>{if(message.data&&'remind'===message.data.type&&'WEA'===message.data.alarmType){callback();}});};let AlarmHandler=new Alarm();