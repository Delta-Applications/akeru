!function(t){var e=function(){this._values={enable3rdPartyApps:void 0,dynamicInputs:void 0},this._bindCallback=null,this.ready=!1,this._promise=null};e.prototype.onchange=null,e.prototype.SETTINGS_KEY_THIRD_PARTY_APP_ENABLED="keyboard.3rd-party-app.enabled",e.prototype.SETTINGS_KEY_DYNAMIC_INPUTS="keyboard.dynamic-inputs",e.prototype.start=function(){navigator.mozSettings&&(this._bindCallback=this.callback.bind(this),navigator.mozSettings.addObserver(this.SETTINGS_KEY_THIRD_PARTY_APP_ENABLED,this._bindCallback),navigator.mozSettings.addObserver(this.SETTINGS_KEY_DYNAMIC_INPUTS,this._bindCallback)),this.getSettings().then(function(){this.ready=!0}.bind(this))},e.prototype.getSettings=function(){return this.ready?this.getSettingsSync():this.getSettingsAsync()},e.prototype.getSettingsSync=function(){return this.ready||console.warn("getSettingsSync: getSettingsSync called before ready."),this._values},e.prototype.getSettingsAsync=function(){if(this._promise)return this._promise;var t=navigator.mozSettings.createLock(),e=this._promise=Promise.all([t.get(this.SETTINGS_KEY_THIRD_PARTY_APP_ENABLED),t.get(this.SETTINGS_KEY_DYNAMIC_INPUTS)]).then(function(t){return this._values.enable3rdPartyApps=t[0][this.SETTINGS_KEY_THIRD_PARTY_APP_ENABLED],this._values.dynamicInputs=t[1][this.SETTINGS_KEY_DYNAMIC_INPUTS],this._values}.bind(this)).catch(function(t){return console.error("InputAppListSettings: Fail to get setting.",t),this._promise=null,this._values.enable3rdPartyApps=!1,this._values.dynamicInputs={},this._values}.bind(this));return e},e.prototype.callback=function(t){switch(t.settingName){case this.SETTINGS_KEY_THIRD_PARTY_APP_ENABLED:this._values.enable3rdPartyApps=t.settingValue;break;case this.SETTINGS_KEY_DYNAMIC_INPUTS:this._values.dynamicInputs=t.settingValue}"function"==typeof this.onchange&&this.onchange(this._values)},e.prototype.stop=function(){this._values={enable3rdPartyApps:void 0,dynamicInputs:void 0},this.ready=!1,this._promise=null,navigator.mozSettings&&(navigator.mozSettings.removeObserver(this.SETTINGS_KEY_THIRD_PARTY_APP_ENABLED,this._bindCallback),navigator.mozSettings.removeObserver(this.SETTINGS_KEY_DYNAMIC_INPUTS,this._bindCallback),this._bindCallback=null)};var n=function(){this.ready=!1,this._inputApps=null,this.settings=null,this._getListPromise=null};n.prototype.onready=null,n.prototype.onupdate=null,n.prototype.SETTINGS_KEY_THIRD_PARTY_APP_ENABLED="keyboard.3rd-party-app.enabled",n.prototype.start=function(){navigator.mozApps&&navigator.mozApps.mgmt&&(navigator.mozApps.mgmt.addEventListener("install",this),navigator.mozApps.mgmt.addEventListener("uninstall",this)),this.settings=new e,this.settings.onchange=this._refresh.bind(this),this.settings.start(),this.getList().then(function(){return this.ready=!0,"function"==typeof this.onready?this.onready(this._inputApps):void 0}.bind(this)).catch(function(t){console.error(t)})},n.prototype.getList=function(){if(this._getListPromise)return this._getListPromise;var t=this._getListPromise=Promise.all([this.settings.getSettings(),this._getAllApps()]).then(this._setInputApps.bind(this)).then(function(){return this._inputApps}.bind(this)).catch(function(t){this._getListPromise=null,console.error(t)}.bind(this));return t},n.prototype.getListSync=function(){return this.ready||console.warn("InputAppList: getListSync called when list is not ready."),this._inputApps},n.prototype.handleEvent=function(t){var e=!1;switch(t.type){case"install":var n=t.application;if(n.downloading)return n.addEventListener("downloadsuccess",this),void 0;e=this._addInputApp(n);break;case"downloadsuccess":e=this._addInputApp(t.target);break;case"uninstall":e=this._removeInputApp(t.application)}e&&"function"==typeof this.onupdate&&this.onupdate(this._inputApps)},n.prototype.stop=function(){this.ready=!1,this._inputApps=null,this.settings=null,this._getListPromise=null,navigator.mozApps&&navigator.mozApps.mgmt&&(navigator.mozApps.mgmt.removeEventListener("install",this),navigator.mozApps.mgmt.removeEventListener("uninstall",this))},n.prototype._getAllApps=function(){return navigator.mozApps&&navigator.mozApps.mgmt?Promise.resolve(navigator.mozApps.mgmt.getAll()).catch(function(t){return console.error("InputAppList: Fail to get app list.",t),[]}):(console.error("InputAppList: mozApps.mgmt not available."),[])},n.prototype._setInputApps=function(t){var e=t[1],n=this.settings.getSettingsSync().dynamicInputs||{},i=e.filter(this._isInputApp,this).map(function(t){return Object.keys(t.manifest.inputs).forEach(function(e){t.manifest.inputs[e].isDynamic&&delete t.manifest.inputs[e]}),t.manifestURL in n&&Object.keys(n[t.manifestURL]).forEach(function(e){e in t.manifest.inputs||(t.manifest.inputs[e]=n[t.manifestURL][e],t.manifest.inputs[e].isDynamic=!0)}),t});0===i.length&&console.error("InputAppList: No input apps installed?"),this._inputApps=i},n.prototype._addInputApp=function(t){return this._isInputApp(t)?(this._inputApps.push(t),!0):!1},n.prototype._removeInputApp=function(t){var e=this._inputApps.findIndex(function(e){return e.manifestURL===t.manifestURL});return-1===e?!1:(this._inputApps.splice(e,1),!0)},n.prototype._isInputApp=function(t){if(!t.manifest||"input"!==t.manifest.role)return!1;if("certified"!==t.manifest.type&&"privileged"!==t.manifest.type)return!1;var e=this.settings.getSettingsSync();return e.enable3rdPartyApps||"certified"===t.manifest.type?t.manifest.permissions&&"object"!=typeof t.manifest.permissions.input?!1:"object"!=typeof t.manifest.inputs?!1:!0:(console.warn("InputAppList: A 3rd-party input app is installed but the feature is not enabled.",t.manifestURL),!1)},n.prototype._refresh=function(){this._getListPromise=null,this.getList().then(function(){return"function"==typeof this.onupdate?this.onupdate(this._inputApps):void 0}.bind(this)).catch(function(t){console.error(t)})},t.InputAppListSettings=e,t.InputAppList=n}(window);