define(["require","modules/bluetooth/bluetooth_cod_mapper","modules/mvvm/observable"],function(t){var e=t("modules/bluetooth/bluetooth_cod_mapper"),n=t("modules/mvvm/observable"),i=!1,o=function(){};i&&(o=function(t){console.log("--> [BluetoothDevice]: "+t)});var r=function(t){o("updateConnectionInfo(): this.address = "+this.address+", this.name = "+this.name+", options = "+JSON.stringify(t)),t.connectionStatus&&(this.connectionStatus=t.connectionStatus),t.profiles&&(this.profiles=Object.create(t.profiles)),o("updateConnectionInfo(): this.connectionStatus = "+this.connectionStatus+", this.profiles = "+JSON.stringify(this.profiles))},a=function(){if(o("updateDescriptionText():"),this.paired===!1)this.descriptionText="pairFailure";else if("pairing"===this.paired)this.descriptionText="pairing";else if(this.paired===!0)if(this.descriptionText="paired","connecting"===this.connectionStatus)this.descriptionText="connecting";else if("connected"===this.connectionStatus)if(this.profiles){var t=this.profiles.hfp,e=this.profiles.a2dp;this.descriptionText=t&&e?"connectedWithDeviceMedia":t?"connectedWithDevice":e?"connectedWithMedia":"connectedWithNoProfileInfo"}else this.descriptionText="connectedWithNoProfileInfo";else"disconnected"===this.connectionStatus&&(this.descriptionText="disconnected");o("updateDescriptionText(): this.descriptionText = "+this.descriptionText)};return function(t){var i=e.getDeviceType(t.cod),s=e.hasAudioCard(t.cod),c=t.connectionStatus||"disconnected",u=n({name:t.name,paired:t.paired,address:t.address,type:i,hasAudioCard:s,connectionStatus:c,profiles:null,descriptionText:"",get data(){return t},updateConnectionInfo:r,updateDescriptionText:a});return u._init=function(){this.observe("paired",this.updateDescriptionText.bind(this)),this.observe("connectionStatus",this.updateDescriptionText.bind(this)),this.observe("profiles",this.updateDescriptionText.bind(this))},t.onattributechanged=function(n){for(var i in n.attrs)switch(o("onDeviceAttributeChanged(): "+n.attrs[i]),n.attrs[i]){case"name":u.name=t.name;break;case"paired":o("onDeviceAttributeChanged(): device.paired = "+t.paired),u.paired=t.paired;break;case"cod":o("onDeviceAttributeChanged(): device.cod = "+t.cod),u.type=e.getDeviceType(t.cod),u.hasAudioCard=e.hasAudioCard(t.cod)}},u._init(),u}});