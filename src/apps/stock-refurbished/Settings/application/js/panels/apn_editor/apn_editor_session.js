define(["modules/apn/apn_settings_manager","panels/apn_editor/apn_editor_const","modules/apn/apn_utils"],function(){function e(e,t,n,i){this._serviceId=e,this._mode=t,this._inputElements=n,this._apnItem=i}var t=require("modules/apn/apn_settings_manager"),n=require("panels/apn_editor/apn_editor_const"),i=require("modules/apn/apn_utils"),o=n.APN_PROPERTIES,r=n.VALUE_CONVERTERS;return e.prototype={_convertValue:function(e,t){return t?t(e):e},_exportApnSetting:function(e){var t={};return o.forEach(function(n){var i=e[n];i&&!i.hidden&&(t[n.toLowerCase()]=this._convertValue(i.value,r.TO_DATA[n]))},this),t},_commitNew:function(){var e=[],n=this._exportApnSetting(this._inputElements);return n.types.slice().forEach(function(i){n.types=[i],e.push(t.addApn(this._serviceId,n))},this),Promise.all(e)},_commitEdit:function(){var e=[],n=this._exportApnSetting(this._inputElements);return 1===n.types.length?e.push(t.updateApn(this._serviceId,this._apnItem.id,n)):n.types.forEach(function(o){var r=i.clone(n);r.types=[o],o===this._apnItem.apn.types[0]?e.push(t.updateApn(this._serviceId,this._apnItem.id,r)):e.push(t.addApn(this._serviceId,r))},this),Promise.all(e)},commit:function(){switch(this._mode){case"new":return this._commitNew();case"edit":return this._commitEdit();default:return console.error("invalid mode"),Promise.resolve()}},cancel:function(){o.forEach(function(e){this._inputElements[e].value=""},this),this._apnItem=null},get mode(){return this._mode}},function(t,n,i,o){return new e(t,n,i,o)}});