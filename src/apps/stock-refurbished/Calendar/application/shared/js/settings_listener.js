
var SettingsListener={_timer:null,_lock:null,_observers:[],getSettingsLock:function sl_getSettingsLock(){if(this._lock&&!this._lock.closed){return this._lock;}
var settings=window.navigator.mozSettings;return(this._lock=settings.createLock());},observe:function sl_observe(name,defaultValue,callback,options){let forceClose=options&&(options.forceClose===true);if(forceClose){var localLock=window.navigator.mozSettings.createLock();var getLockReq=function(){return localLock.get(name);}}else{var self=this;var getLockReq=function(){return self.getSettingsLock().get(name);}}
var settings=window.navigator.mozSettings;if(!settings){window.setTimeout(function(){callback(defaultValue);});return;}
var req;try{req=getLockReq();}catch(e){console.warn('Stale lock in settings_listener.js.','See https://bugzilla.mozilla.org/show_bug.cgi?id=793239');this._lock=null;req=getLockReq();}
req.then(()=>{callback(typeof(req.result[name])!='undefined'?req.result[name]:defaultValue);});if(forceClose){localLock.forceClose();}
var settingChanged=function settingChanged(evt){callback(evt.settingValue);};settings.addObserver(name,settingChanged);this._observers.push({name:name,callback:callback,observer:settingChanged});},unobserve:function sl_unobserve(name,callback){var settings=window.navigator.mozSettings;var that=this;this._observers.forEach(function(value,index){if(value.name===name&&value.callback===callback){settings.removeObserver(name,value.observer);that._observers.splice(index,1);}});}};