/* ----------------------------------
 * CHECKBOXES / RADIOS
 * ---------------------------------- */

label.pack-checkbox,
label.pack-radio,
label.pack-switch,
label.pack-checkbox-large,
label.pack-radiol-large,
label.pack-switchl-large,
label.pack-radio-large,
label.pack-switch-large {
  display: inline-block;
  vertical-align: middle;
  width: 5rem;
  height: 6rem;
  position: relative;
  background: none;
}
label.pack-checkbox span,
label.pack-radio span,
label.pack-switch span,
label.pack-checkbox-large span,
label.pack-radio-large span,
label.pack-switch-large span{
  margin-left:-2.0rem;
  -moz-padding-start:2.0rem;
}
label.pack-checkbox input,
label.pack-radio input,
label.pack-switch input ,
label.pack-checkbox-large input,
label.pack-radio-large input,
label.pack-switch-large input{
  margin: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  /* the conflict between left/right/width is resolved differently in LTR and
   * RTL. The goal here is to keep "input" invisible */
  left: 0;
  right: 0;
  width: 0;
}

label.pack-checkbox input ~ span:after,
label.pack-radio input ~ span:after {
  content: '';
  position: absolute;
  /* CSS will resolve the conflict among left, right, and width "intelligently"
     and pick left+width for LTR and right+width for RTL. */
  left: 50%;
  right: 50%;
  top: 50%;
  margin: 0;
  margin-top: -1.1rem;
  -moz-margin-start: 26.0rem;
  width: 2.2rem;
  height: 2.2rem;
  pointer-events: none;
  font-size: 2.2rem;
  font-family: "gaia-icons";
}
label.pack-checkbox-large input ~ span:after,
label.pack-radio-large input ~ span:after {
  content: '';
  position: absolute;
  /* CSS will resolve the conflict among left, right, and width "intelligently"
     and pick left+width for LTR and right+width for RTL. */
  left: 50%;
  right: 50%;
  top: 50%;
  margin: 0;
  margin-top: -1.6rem;
  -moz-margin-start: calc(50% - 3.7rem);
  width: 3.2rem;
  height: 3.2rem;
  pointer-events: none;
  font-size: 3.2rem;
  font-family: "gaia-icons";
  line-height: 3.2rem;
}

label.pack-checkbox input ~ span:after,
label.pack-checkbox-large input ~ span:after,
.foccus label.pack-checkbox input ~ span:after,
.foccus label.pack-checkbox-large input ~ span:after {
  content: "check-off";
  color: var(--color-gs45);
}

label.pack-checkbox input:checked ~ span:after,
label.pack-checkbox-large input:checked ~ span:after {
  content: "check-on";
  color: var(--highlight-color);
}

.focus label.pack-checkbox input:checked ~ span:after,
.focus label.pack-checkbox-large input:checked ~ span:after {
  content: "check-on";
  color: var(--color-gs00);
}

label.pack-radio input ~ span:after,
label.pack-radio-large input ~ span:after,
.foccus label.pack-radio input ~ span:after,
.foccus label.pack-radio-large input ~ span:after {
  content: "radio-off";
  color: var(--color-gs45);
}

label.pack-radio input:checked ~ span:after,
label.pack-radio-large input:checked ~ span:after {
  content: "radio-on";
  color: var(--highlight-color);
}

.focus label.pack-radio input:checked ~ span:after,
.focus label.pack-radio-large input:checked ~ span:after {
  content: "radio-on";
  color: var(--color-gs00);
}

/* checkbox & radio: disabled state */
label.pack-checkbox input:disabled ~ span:after,
label.pack-radio input:disabled ~ span:after,
label.pack-checkbox-large input:disabled ~ span:after,
label.pack-radio-large input:disabled ~ span:after {
  opacity: 0.4;
}

label.pack-checkbox input:checked ~ span:after,
label.pack-radio input:checked ~ span:after,
label.pack-switch input:checked ~ span:after,
label.pack-checkbox-large input:checked ~ span:after,
label.pack-radio-large input:checked ~ span:after,
label.pack-switch-large input:checked ~ span:after  {
  background-position: center bottom;
}

/* 'Dangerous' switches */

label.pack-checkbox.danger input ~ span:after {
  background-image: url(switches/images/check/danger.png);
}

label.pack-radio.danger input ~ span:after {
  background-image: url(switches/images/radio/danger.png);
}


/* ----------------------------------
 * ON/OFF SWITCHES
 * ---------------------------------- */

label.pack-switch input ~ span:after {
  content: '';
  position: absolute;
  right: 0;
  top: 50%;
  width: 6rem;
  margin: -1.4rem 0 0;
  height: 2.7rem;
  pointer-events: none;
  border-radius: 1.35rem;
  overflow: hidden;
  background: #e6e6e6 url(switches/images/switch/background_off.png) no-repeat -3.2rem 0 / 9.2rem 2.7rem;
  transition: background 0.2s ease;
}

/* switch: 'ON' state */
label.pack-switch input:checked ~ span:after {
  background: #e6e6e6 url(switches/images/switch/background.png) no-repeat 0 0 / 9.2rem 2.7rem;
}

/* switch: disabled state */
label.pack-switch input:disabled ~ span:after {
  opacity: 0.4;
}

label.pack-switch input.uninit ~ span:after {
  transition: none;
}

/******************************************************************************
 * Right-To-Left tweaks
 */

html[dir="rtl"] label.pack-switch input ~ span:after {
  left: 0;
  right: unset;
}

html[dir="rtl"] label.pack-switch input ~ span:after {
  background-position: 0;
}

/* switch: 'ON' state */
html[dir="rtl"] label.pack-switch input:checked ~ span:after {
  background-image: url(switches/images/switch/background_rtl.png);
  background-position: -3.2rem 0;
}


